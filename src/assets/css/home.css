
/*ABOUt*/

#about {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    height: auto;
    gap: 50px;
    background: var(--second-color);
}

.wrapper.left {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
}

.wrapper.right {
    width: 100%;
    height: auto;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.wrapper.right ul {
    padding: 0;
}


.relative-img{
    position: relative;
    width: 80%;
    min-height: 600px;
    display: flex;
    justify-content: flex-end;
    align-items: flex-end;
}

.relative-img .img.active {
    z-index: 100 !important;
}

.relative-img .img.active img {
    opacity: 1 !important;
}

.img {
    position: absolute;
    display: flex;
    border-radius: var(--base-radius);
}
.img img {
    border-radius: var(--base-radius);
}

.img#un {
    background-color: var(--main-color);
    z-index: 4;
    width: 80%;
    height: 90%;
}

.img#un img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    opacity: 0;
    
}

.img#deux {
    background-color: var(--main-color-dark);
    z-index: 3;
    width: 90%;
    height: 75%;
}

.img#deux img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    opacity: 0;
}

.img#trois {
    background-color: var(--main-color);
    z-index: 2;
    width: 100%;
    height: 65%;
}

.img#trois img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: 50% 40%;
    opacity: 0;
}

.img#quatre {
    background-color: var(--main-color-hover);
    z-index: 1;
    width: 70%;
    height: 100%;
}

.img#quatre img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    opacity: 0;
}



.pagination {
    display: flex;
    justify-content: center;
    margin-top: 25px;
}

.pagination ul, .pagination_number {
    display: flex;
}

.pagination ul li button svg {
    pointer-events: none;
}

.pagination ul li button:is(.prev, .next) {
    width: 50px;
}

.pagination ul li button{
    width: 30px;
    height: 30px;
    border-radius: 40px;
    border: var(--font-color) 1px solid;
    display: grid;
    place-items: center;
    font-size: 1rem;
    margin: 0 10px ;
    transition: all 0.1s ease-in-out;
}

.pagination ul li button:is(.active) {
    background-color: var(--main-color-dark);
    border: none;
}

.pagination ul li button:hover:not(.prev,.next) {
    background-color: var(--main-color-hover);
    transform: scale(1.2);
    border: none;
    color: var(--second-color);
}

.pagination ul li button:hover:is(.prev,.next) {
    transform-origin: right;
    border-radius: 10px;
    background-color: var(--main-color-hover);
    transform: scaleX(1.2);
    border: none;
    color: var(--second-color);
}

.pagination ul li button:hover:is(.prev) {
    transform-origin: right;
    -ms-transform-origin: right;
    -o-transform-origin: right;
}

.pagination ul li button:hover:is(.next) {
    transform-origin: left;
    -ms-transform-origin: left;
    -o-transform-origin: left;
}




#no01.boxes-wrapper .boxes, #no02.boxes-wrapper .boxes, #no03.boxes-wrapper .boxes {
    display: flex;
}

.creative {
    position: relative;
}
.relative {
    position: relative;
    height: calc(5 * var(--header-section-font)) ;
}
.creative .abso {
    position: absolute;
    top: 0;
    left: calc(-100vw / 9);
    width: 100vw;
    height: auto;
}

.boxes-wrapper, .boxes {
    position: relative;
    display:flex; 
    align-items:center;
    overflow-x: hidden;
}

.boxes {
    position: relative;
    white-space: nowrap;
    padding: 0;
    margin: 0;
    will-change: transform;
}

.box {
    padding: 0;
    display: inline-block;
    margin-right: 1.5rem;
    font-size: var(--header-section-font);
}

.box.crea {
    color: var(--main-color-dark);
}

.box.dev {
    color: transparent;
    /* Prefix required. Even Firefox only supports the -webkit- prefix */
    -webkit-text-stroke-width: 2px;
    -webkit-text-stroke-color: var(--font-color);
  }



  .stack__wrapper {
      display: flex;
      flex-direction: column;
      gap: 30px;
  }

  .stackNav__wrapper {
      height: inherit;
      width: 100%;

      display: flex;
      flex-direction: row;
      justify-content: space-between;
  }


  .Stackicon.active {
    background-color: var(--main-color);
  }
  .Stackicon {
      position: relative;
      background-color: var(--main-color-dark);
      border-radius: 100px;
      width: 80px;
      height: 80px;
      display: grid;
      place-items: center;
      transition: background ease 0.3s;
  }
  .Stackicon:hover {
    cursor: pointer;
  }
  .Stackicon:not(.active):hover {
    background-color: var(--main-color-hover);
}

  .Stackicon:not(:last-child):after,
  .Stackicon:not(:first-child)::before  {
      content: '';
      width: calc((((100vw - 2 *(100vw / 9)) - (80px * 4)) / 6));
      height: 10px;
      background-color: var(--main-color-dark);

      position: absolute;

      z-index: -1;
  }
  .Stackicon:not(:last-child)::after {
    transform-origin: left;
    left: calc(100%);
  }
  .Stackicon:not(:first-child)::before {
    transform-origin: right;
    right: calc(100%);
  }
  
  .Stackicon.active::after, .Stackicon.active::before {
    background-color: var(--main-color);
}
.Stackicon:hover:not(:last-child,.active):after,
.Stackicon:hover:not(:first-child,.active):before {
    transition: background ease 0.3s;
}

.Stackicon:hover:not(:last-child,.active):after,
.Stackicon:hover:not(:first-child,.active):before {
    background-color: var(--main-color-hover);
}

  .Front {
      transition: all 0.3s ease;
    height: 100%;
    width: 100%;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows:auto  auto auto auto;
    gap: 20px;

  }
  .Back {
    transition: all 0.3s ease;
    height: 100%;
    width: 100%;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: min(200px, 15vh) auto  auto min(200px, 15vh);
    gap: 20px;
    grid-template-areas: ". . Learning"
                        "php nodejs laravel"
                        "php nodejs laravel"
                        ". . .";

}  
.Data{
    transition: all 0.3s ease;
    height: 100%;
    width: 100%;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: min(200px, 15vh) auto  auto min(200px, 15vh);
    gap: 20px;
    grid-template-areas: ". . Learning"
                        "MySQL . MongoDB"
                        "MySQL . MongoDB"
                        ". . .";

} 

.Services {
    transition: all 0.3s ease;
    max-height: 100%;
    width: 100%;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows:repeat(4, 1fr);
    grid-template-areas: ". . Learning"
                         "ThreeJs Jest Stripe"
                         "ThreeJs Gsap GraphQl"
                         "Git Axios GraphQl";
    gap: 20px;

} 
    .stack__content .stack .color {
        padding: var(--mb-1-5);
        height: 100%;
        border-radius: var(--base-radius);
    }
    #app:not(.xl) .Learning {
    display: flex;
    align-items: center;
    grid-row: 3 / span 1;
    grid-column: span 1;
    }

    
    #app:not(.xl) .Front div.Vuejs {
        grid-row: 1 / span 1;
        grid-column: span 1;
    }
    #app:not(.xl) .Front div.Nuxtjs {
        grid-column: span 1;
        grid-row: 2 / span 1;
    }

    #app:not(.xl) .Front div.typescript {
        grid-column: span 1;
        grid-row: 4 / span 1;
    }

.Back div.php {
    grid-area: php;
}
.Back div.nodeJs {
    grid-area: nodejs;
}
.Back div.Laravel {
    grid-area: laravel;
}

.Data div.MySQL {
    grid-area: MySQL;
}
.Data div.MongoDB {
    grid-area: MongoDB;
}

.Services div.ThreeJs {
    grid-area: ThreeJs;
}

.Services div.Git {
    grid-area: Git;
}
.Services div.Stripe {
    grid-area: Stripe;
}
.Services div.Jest {
    grid-area: Jest;
}
.Services div.Gsap {
    grid-area: Gsap;
}
.Services div.Axios {
    grid-area: Axios;
}
.Services div.GraphQl {
    grid-area: GraphQl;
}

.Front .color, .Back .color {
    width: 100%;
    height: 100%;
}

.color .stack__img-wrapper{
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100px;
    height: 100px;
    border-radius: 100%;
}

.color .stack__img-wrapper img{
    width: 70px;
    height: auto;
}


.color.light .stack__img-wrapper{
    background-color: var(--font-color-alt);
}
.color.dark .stack__img-wrapper{
    background-color: var(--main-color);
}

.color.mid .stack__img-wrapper{
    background-color: var(--font-color);
}

.stack__content div > .color.light {
    background-color: var(--main-color);
}
.stack__content div > .color.mid {
    background-color: var(--main-color-hover);
}
.stack__content div > .color.dark {
    background-color: var(--main-color-dark);
}

.stack__content div > .color.light p {
    color: var(--font-color);
}
.stack__content div > .color.mid p {
    color: var(--second-color-alt);
}
.stack__content div > .color.dark p {
    color: var(--second-color);
}


.stack > div {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}
.stack__header {
    display: flex;
    align-items: center;
    gap: 30px;
}



#about2 {
    margin: 5rem 0;
    
}

#about2 > .container {
    border-radius: var(--base-radius);
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    background-color: var(--font-color);
    height: auto;
    padding: 50px;
}

.container .text p {
    font-size: var(--header-section-font);
}

.text > p:not(.main) {
    background: linear-gradient(
        to right,
        rgb(255,255,255, 1) 50%,
        rgb(37,37,37) 50%
    );
    background-size: 200% 100%;
    background-position-x: 100%;
    color: transparent;
    background-clip: text;
    -webkit-background-clip: text;
    transition: all ease;
}

.text p:is(.main) {
    background: linear-gradient(
        to right,
        rgb(223,215,250, 1) 50%,
        rgb(37,37,37) 50%
    );
    background-size: 200% 100%;
    background-position-x: 100%;
    color: transparent;
    background-clip: text;
    -webkit-background-clip: text;
    transition: all ease;
    font-family: "Gerbil";
}


#Project .Project__header {
    display: flex;
    min-height: 70vh;
    margin-bottom: 5rem;
    justify-content: center;
}

#Project .Project__header p{
    font-size: var(--smallest-font);
    font-weight: 300;
}

.Project__header-content {
    width: 90%;
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
}

.Model {
    width: 100%;
    position: absolute;
    right: 0;
    height: 100%;
    z-index: -1;
    background-color: var(--main-color);
    border-radius: var(--base-radius);
}

.Model img{
    transform: translateY(-100px);
}
.Project__content {
    flex-wrap: wrap;
    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: 100px;
}

.Project-list-item {
    display: flex;
    align-items: center;
}

.Project-list-item:nth-child(2n) {
    text-align: right;
}


.Project-list-item:nth-child(2n){
    flex-direction: row-reverse;
}

.Project-list-item .img-wrapper {
    min-width: 400px;
    height: 700px;
    overflow: hidden;
}

.Project-list-item img{
    width: 100%;
    aspect-ratio: 9 / 16;
    object-fit: cover;
    object-position: top;
}

.Project-list-item .item-content {
    margin: var(--mb-1-5);
}

.item-content__title {
    font-size: var(--header-section-font);
    font-weight: bolder;
    color: var(--main-color-dark);
    line-height: 1.5;
}

#app:is(.xl,.lg) .Project-list-item:nth-child(2n) .item-content__title {
    transform: translateX(100px);
}

#app:is(.xl, .lg) .Project-list-item:not(:nth-child(2n)) .item-content__title {
    transform: translateX(-100px);
}

.item-content__text, .item-content__link {
    font-size: var(--big-font-size);
    line-height: 1;
}

.item-content__text {
    font-weight: lighter;
    margin-bottom: var(--mb-1-5);
}

.item-content__link {
    font-weight: bolder;
    text-decoration: underline;
}


#contact {
    display: flex;
    justify-content: center;
    gap: 70px;
    min-height: 90vh;
    background-color: var(--second-color);
    width: initial;
    padding: 2rem calc(100vw / 9);
}

#contact .Model-contact {
    display: grid;
    place-items: self-start center;
    min-width: 570px;
    height: inherit;
    background-color: var(--main-color);
    border-radius: var(--base-radius);
}

.Model-contact img{
    transform: translateY(-50px);
}
.contact-content {
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}
.contact-content-wrapper {
    display: flex;
    flex-direction: column;
    gap: 100px;
}
.contact-content form {
    display: grid;
    grid-template-columns: 1fr;
    gap: 30px;
}
.contact-content form p {
    grid-column: span 1;
}

.contact-content form p:not(.submit) {
    min-height: 70px;
    min-width: 340px;
    background-color: white;
    border-radius: var(--small-radius);
}

.contact-content form p input,.contact-content form p textarea  {
    width: 100%;
    height: 100%;
    border: none;
    border-radius: var(--small-radius);
}
.contact-content form p input {
    padding: 0 var(--mb-1-5);
}
.contact-content form p textarea {
    padding: var(--mb-1-5);
    resize: none;
}

.contact-content form p textarea:focus, .contact-content form p input:focus {
    outline: none !important;
    border: 2px solid var(--main-color-hover);
}

.submit {
    justify-self: self-end;
    background-color: var(--main-color);
    min-height: 60px;
    display: grid;
    place-items: center;
    max-width: 200px;
    width: 200px;
    grid-column: 2/2;
}

.scrollMore.toContact {
 align-self: self-end;
 display: flex;
 flex-direction: column;
 align-items: center;
 justify-content: center;
 gap: 15px;
}